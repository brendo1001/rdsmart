% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsmart.R
\name{dsmart}
\alias{dsmart}
\title{Disaggregating and harmonising soil map units through resampled 
classification trees}
\usage{
dsmart(
  covariates,
  polygons,
  composition,
  rate = 15,
  reals = 100,
  observations = NULL,
  method.sample = "by_polygon",
  method.allocate = "weighted",
  method.model = NULL,
  args.model = NULL,
  strata = NULL,
  nprob = 3,
  outputdir = getwd(),
  stub = NULL,
  cpus = 1,
  factors = NULL,
  type = "raw"
)
}
\arguments{
\item{covariates}{A \code{RasterStack} of \emph{scorpan} environmental 
covariates to calibrate the \code{C50} classification trees against. See 
\emph{Details} for more information.}

\item{polygons}{A \code{SpatialPolygonsDataFrame} containing the soil map 
unit polygons that will be disaggregated. The first field of the data frame
must be an integer that identifies each polygon.}

\item{composition}{A \code{data.frame} that contains information on the 
soil-class composition of each polygon in \code{polygons}. Each row 
contains information about one soil class component of one polygon, which 
belongs to one soil map unit. First field contains the integer that 
identifies the polygon. Second field contains a code that identifies the 
soil map unit that the polygon belongs to.

If \code{strata = NULL} (the default), third column contains a code that 
identifies the soil class and fourth column contains a number in the range 
\code{(0, 100)} that identifies the proportion of the \strong{map unit} 
that the soil class corresponds to. See the example data 
\code{data(dalrymple_composition)}.

If \code{strata} is a \code{RasterLayer}, third column contains an integer 
that identifies the stratum in \code{strata}, fourth column contains a code
that identifies the soil class and fifth column contains a number in the
range \code{(0, 100)} that identifies the proportion of the
\strong{stratum} that the soil class corresponds to.}

\item{rate}{An integer that identifies the number of virtual samples to draw 
from each polygon in each realisation. If \code{method.sample = 
"by_polygon"}, the number of samples to draw from each polygon in 
\code{polygons}. If \code{method.sample = "by_area"}, the sampling density 
in number of samples per square kilometre.}

\item{reals}{An integer that identifies the number of realisations of the 
soil class distribution that DSMART should compute.}

\item{observations}{\emph{optional} A \code{data.frame} that contains actual 
observations of the soil class at locations across the soil map area. These
data augment the virtual samples and are used in each realisation. Each row
contains information about one soil class observation. First and second 
fields contain the \emph{x-} and \emph{y-}components of the observation's 
spatial location. Third field is the soil class code. See \emph{Details}.}

\item{method.sample}{Identifies the sampling method. Valid values are 
\code{"by_polygon"} (the default), in which case the same number of samples
are taken from each polygon; or \code{"by_area"}, in which case the number 
of samples per polygon depends on the area of the polygon.}

\item{method.allocate}{Method of allocation of virtual samples to soil 
classes. Valid values are \code{"weighted"}, for weighted-random allocation
to a soil class from within the virtual sample's map unit; 
\code{"random_mapunit"}, for completely random allocation to a soil class 
from within the virtual sample's map unit; and \code{"random_all"}, for 
completely random allocation to a soil class from within the entire map 
area.}

\item{method.model}{Method to be used for the classification model. If no value
is passed, a C5.0 decision tree is built. Otherwise, the value must match a
valid 'method' argument in the caret::train function.}

\item{strata}{\emph{optional} An integer-valued \code{RasterLayer} that will 
be used to stratify the allocation of virtual samples to soil classes. 
Integer values could represent classes of slope position (e.g. crest, 
backslope, footslope, etc.) or land use (e.g. cropland, native vegetation, 
etc.) or some other variable deemed to be an important discriminator of the
occurrence of soil classes within a map unit.}

\item{nprob}{At any location, disaggregated soil class predictions can be 
ranked according to their probabilities of occurence. \code{rdsmart} can 
map the class predictions, and their probabilities, at any rank. 
\code{nprob} is an integer that identifies the number of probability ranks 
to map. For example, if \code{nprob = 3}, DSMART will map the first-, 
second- and third-most-probable soil classes and their probabilities of 
occurrence.}

\item{outputdir}{A character string that identifies the location of the main 
output directory. The folder \code{output} and its subfolders will be 
placed here. Default is the current working directory, \code{getwd()}.}

\item{stub}{\emph{optional} A character string that identifies a short name 
that will be prepended to all output.}

\item{cpus}{An integer that identifies the number of CPU processors to use 
for parallel processing.}

\item{factors}{A character vector with the names of the covariates that should
be treated as factors.}

\item{method.args}{A list of arguments to be passed to the caret::train function.
The list can include a trainControl object, arguments to be passed directly
to the train function and arguments to be passed to the predictive model.}

\item{prob}{A character vector to specify the type of the predictions. By
default, raw class predictions are used. Each realisation will produce a 
map of soil classes, and class probabilities will be calculated from the
frequency of each class across the realisations. If set to "prob", each
realisation will produce a rasterbrick with the probabilities of each class.
The final class probabilities will be calculated by averaging the class
probabilities across the realisation.}
}
\value{
A list that aggregates metadata about the current run of
  \code{disaggregate} and \code{summarise}.
}
\description{
\code{dsmart} performs the spatial disaggregation of a soil choropleth map. 
The underlying functions are \code{disaggregate}, which performs the spatial 
downscaling, and \code{summarise}, which computes the soil class 
probabilities and n-most-probable soil classes.
}
\examples{
# Load datasets
data(dalrymple_composition)
data(dalrymple_covariates)
data(dalrymple_observations)
data(dalrymple_polygons)

# Run dsmart without adding observations
dsmart(dalrymple_covariates, dalrymple_polygons, dalrymple_composition,
 rate = 15, reals = 10, cpus = 6)

# Run dsmart with extra observations
dsmart(dalrymple_covariates, dalrymple_polygons, dalrymple_composition,
 observations = dalrymple_observations, rate = 15, reals = 10)

}
\references{
McBratney, A.B., Mendonca Santos, M. de L., Minasny, B., 2003. On
  digital soil mapping. Geoderma 117, 3--52. doi: 
  \href{https://doi.org/10.1016/S0016-7061(03)00223-4}{10.1016/S0016-7061(03)00223-4}
  
  Odgers, N.P., McBratney, A.B., Minasny, B., Sun, W., Clifford, D., 2014. 
  DSMART: An algorithm to spatially disaggregate soil map units, \emph{in:} 
  Arrouays, D., McKenzie, N.J., Hempel, J.W., Richer de Forges, A., 
  McBratney, A.B. (Eds.), GlobalSoilMap: Basis of the Global Spatial Soil 
  Information System. Taylor & Francis, London, pp. 261--266.
  
  Odgers, N.P., Sun, W., McBratney, A.B., Minasny, B., Clifford, D., 2014. 
  Disaggregating and harmonising soil map units through resampled 
  classification trees. Geoderma 214, 91--100. doi: 
  \href{https://doi.org/10.1016/j.geoderma.2013.09.024}{10.1016/j.geoderma.2013.09.024}
}
